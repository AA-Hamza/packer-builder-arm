name: All
on:
  push:
    branches:
      master
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve cache
        id: cache-key
        uses: actions/cache@v3
        with:
          path: packer-builder-arm
          key: key-${{ github.sha }}-1

      - name: Checkout
        if: steps.cache-key.outputs.cache-hit != 'true'
        uses: actions/checkout@v3.1.0

      - name: Set up Go 1.19
        if: steps.cache-key.outputs.cache-hit != 'true'
        uses: actions/setup-go@v3.3.0
        with:
          go-version: 1.19
        id: go

      - name: Get dependencies
        if: steps.cache-key.outputs.cache-hit != 'true'
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        if: steps.cache-key.outputs.cache-hit != 'true'
        run: go build -v .

      - name: Cache binary
        if: steps.cache-key.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: packer-builder-arm
          key: key-${{ github.sha }}-1

  build:
    needs: compile
    strategy:
      fail-fast: false
      matrix:
        boards:
          #- bananapi-r1/archlinuxarm.json
          - beaglebone-black/angstrom.json
          - beaglebone-black/archlinuxarm.json
          - beaglebone-black/debian.json
          - beaglebone-black/ubuntu.pkr.hcl
          - jetson-nano/ubuntu.json
          - odroid-u3/archlinuxarm.json
          - odroid-xu4/archlinuxarm.json
          - odroid-xu4/ubuntu.json
          - parallella/archlinuxarm.json
          - parallella/ubuntu.json
          - raspberry-pi/archlinuxarm.json
          - raspberry-pi/raspbian.json
          - raspberry-pi/raspbian-resize.json
          - raspberry-pi/raspios-lite-arm.json
          - raspberry-pi-3/archlinuxarm.json
          - raspberry-pi-3/raspios-lite-arm64.json
          - raspberry-pi-4/ubuntu_server_20.04_arm64.json
          - raspberry-pi-4/ubuntu_server_20.04_arm64.pkr.hcl
          - raspberry-pi-4/archlinuxarm.json
          - wandboard/archlinuxarm.json
    name: Build ${{ matrix.boards }} image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Setup backports
        run: sudo /bin/bash -c 'echo "deb http://archive.ubuntu.com/ubuntu trusty-backports main restricted universe multiverse" >> /etc/apt/sources.list'

      - name: Fetch additional packages
        run: |
          sudo apt-get update
          sudo apt-get install fdisk gdisk qemu-user-static libarchive-tools tar qemu qemu-utils

      - name: Fetch packer
        run: wget https://releases.hashicorp.com/packer/1.8.3/packer_1.8.3_linux_amd64.zip && unzip -d . packer_1.8.3_linux_amd64.zip

      - name: Retrieve cache
        uses: actions/cache@v3
        with:
          path: packer-builder-arm
          key: key-${{ github.sha }}-1

      - name: Free disk space
        run: |
          df -h
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h

      - name: Build image
        run: sudo ./packer build boards/${{ matrix.boards }}
